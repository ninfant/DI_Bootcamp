Data Structure (more complex) - 
Dictionaries: stores key and values pairs, dont have indexes, they have keys instead
dictionaries are defined by enclosing a list of key-value pairs in curly braces {}.

In Dictionaries,  
i can have acces to the values through the key
key:value
the key is unmutable 
value can be any type


what is:
- an entry = a key value pair {key:value}

How to:
- create (syntax) 
{key:value}

- access key
 dict_name[key]

- modify an entry
dict_name[key] = new_value

- add new entry
 dict_name['new_key'] = 'new_value'

- delete an entry
del student_info['city']



#Built-In Methods 
- acces all the keys
dict_name.keys()

-acces all the values
 dict_name.values()

acces all keys and values
 dict_name.items()




- method to add one or multiple key value pair y para unir dos diccionarios?
 update()

#Advanced built-in methods and keywords:

zip() = most be converted to an iterable in order to see the result

Continue: jump to the next iteration
Break: breaks the loop
Pass: placeholder - does nothing, organize the code 